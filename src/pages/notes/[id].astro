---
import Layout from "../../layouts/Layout.astro";
import { supabase } from "../../lib/supabase";
import type { Note } from "../../types/note";

const { id } = Astro.params;

const { data: note, error } = await supabase
    .from("notes")
    .select("*")
    .eq("id", id)
    .single();

let relatedNotes: Note[] = [];

if (note && !error) {
    const { data: related, error: relatedError } = await supabase
        .from("notes")
        .select("*")
        .neq("id", id)
        .filter("tags", "cs", `{${note.tags.join(",")}}`)
        .limit(5);

    if (!relatedError && related) {
        relatedNotes = related;
    } else {
        console.error("Error fetching related notes:", relatedError);
    }
}

if (error) {
    console.error("Error fetching note:", error);
}
---

<Layout title={note ? `Note: ${note.id}` : "Note Not Found"}>
    {error && <p>Error loading note: {error.message}</p>}
    {
        note && (
            <div>
                <h1>Note: {note.id}</h1>
                <p>
                    <strong>Content:</strong> {note.content}
                </p>
                <p>
                    <strong>POV Type:</strong> {note.pov_type}
                </p>
                <p>
                    <strong>Narrator Trustworthiness:</strong>{" "}
                    {note.narrator_trustworthiness || "N/A"}
                </p>
                <p>
                    <strong>Epistemic Anomalies:</strong>{" "}
                    {note.epistemic_anomalies || "N/A"}
                </p>
                <p>
                    <strong>Narration Nodes:</strong>
                </p>
                <ul>
                    {note.narration_nodes &&
                        note.narration_nodes.map(
                            (node: {
                                element: string;
                                description: string;
                            }) => (
                                <li>
                                    {node.element}: {node.description}
                                </li>
                            ),
                        )}
                </ul>
                <p>
                    <strong>Tags:</strong>{" "}
                    {note.tags
                        .map((tag: string) => (
                            <a href={`/search?q=${tag}`}>{tag}</a>
                        ))
                        .join(", ")}
                </p>
                <p>
                    <strong>Sequence Position:</strong>{" "}
                    {note.sequence_position || "N/A"}
                </p>
                <p>
                    <strong>Source:</strong> {note.source || "N/A"}
                </p>
                <p>
                    <strong>Created At:</strong>{" "}
                    {new Date(note.created_at).toLocaleString()}
                </p>
                <p>
                    <strong>Updated At:</strong>{" "}
                    {new Date(note.updated_at).toLocaleString()}
                </p>

                <h2>Related Notes</h2>
                {relatedNotes.length > 0 ? (
                    <ul>
                        {relatedNotes.map((relatedNote) => (
                            <li>
                                <a href={`/notes/${relatedNote.id}`}>
                                    {relatedNote.content.substring(0, 50)}...
                                </a>
                                <br />
                                <small>
                                    Tags: {relatedNote.tags.join(", ")}
                                </small>
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p>No related notes found.</p>
                )}

                <a href={`/notes/${note.id}/edit`}>Edit Note</a>
            </div>
        )
    }
    <a href="/">Back to Home</a>
</Layout>

<style>
    a {
        color: #4a4a4a;
        text-decoration: none;
    }
    a:hover {
        text-decoration: underline;
    }
    ul {
        list-style-type: none;
        padding: 0;
    }
    li {
        margin-bottom: 1rem;
    }
</style>
